executor_script: 'scripts/storm_distributed_do_run.sh'

dimensions:
  schema: variant.rate.parallelism
  rate:
    - 4000
    - 5000
    - 6000
    - 7000
  parallelism:
    - 1

queries:
  - name: StormLinearRoadKafkaDistributed
    reference: LinearRoad.LinearRoad

variants:
  - name: OS
    spe_command: "{base_storm_cmd} --workers {parallelism} --time {duration_seconds} --statisticsFolder {statistics_folder} --kafkaHost {kafka_host}:9092 --conf {query_config_file}_p{parallelism}.json --rate {rate} {extra_args}"
    kafka_start_command: "ssh {kafka_host} 'BASEDIRHERE/scheduling-queries/kafka-source/start-source.sh --partitions {parallelism} {args} --configFile {query_config_file}_p{parallelism}.json --graphiteHost {statistics_host}  &>> {kafka_command_log} &'"
    kafka_stop_command: "ssh {kafka_host} 'pkill -f start-source.sh &>> {kafka_command_log} &'"
    args: ''
  - name: LACHESIS
    kafka_start_command: "ssh {kafka_host} 'BASEDIRHERE/scheduling-queries/kafka-source/start-source.sh --partitions {parallelism} {args} --configFile {query_config_file}_p{parallelism}.json --graphiteHost {statistics_host}  &>> {kafka_command_log} &'"
    kafka_stop_command: "ssh {kafka_host} 'pkill -f start-source.sh &>> {kafka_command_log} &'"
    args: ''
    spe_command: "{base_storm_cmd} --workers {parallelism} --time {duration_seconds} --statisticsFolder {statistics_folder} --kafkaHost {kafka_host}:9092 --conf {query_config_file}_p{parallelism}.json  --rate {rate} {extra_args}"
    scheduler_command: >
      sudo java -Dname=Lachesis -cp  BASEDIRHERE/scheduling-queries/lachesis/lachesis-0.1.jar
      io.palyvos.scheduler.integration.StormIntegration --minPriority 19 
      --maxPriority -20 --cgroupPolicy one --statisticsFolder {statistics_folder} --statisticsHost {statistics_host} --logarithmic --period 1
      --worker storm.daemon.worker --policy task-input-output-queue --distributed {nimbus}
      --queryGraph BASEDIRHERE/scheduling-queries/storm_queries/LinearRoad/linear_road.yaml 

nimbus: "10.0.0.2"
job_name: "LinearRoad"

base_storm_cmd: >
  BASEDIRHERE/distributed-apache-storm-1.2.3/bin/storm jar
  BASEDIRHERE/scheduling-queries/storm_queries/LinearRoad/target/LinearRoad-1.0-SNAPSHOT.jar -Dname=Storm LinearRoad.LinearRoad

query_config_file: BASEDIRHERE/scheduling-queries/storm_queries/LinearRoad/Configurations/seqs_kafka
utilization_command: "BASEDIRHERE/scheduling-queries/scripts/utilization-storm-cluster.sh {statistics_host}"
kafka_command_log: BASEDIRHERE/scheduling-queries/kafka-source/command.log


csv_queries:
  throughput: aliasByNode(Storm.*.*.*.source.*.emit-count.default.value, 4, 5)
  sink-throughput: aliasByNode(Storm.*.*.*.sink.*.execute-count.*.value, 4, 5, 7)
  external-rate: aliasByNode(kafka.*.external-rate.value, 0, 1)
  latency: aliasByNode(Storm.*.*.*.*.*.total-latency.*, 4, 5)
  end-latency: aliasByNode(Storm.*.*.*.*.*.total-latency-ext.*, 4, 5)
  cpu: aliasByNode(Storm.*.utilization.cpu.percent, 0, 1)
  memory: aliasByNode(Storm.*.utilization.memory.mb, 0, 1)
  external-queue: aliasByNode(Storm.*.*.*.*.*.external-queue-size.*, 4, 5)
  schedule-external: aliasByNode(lachesis.*.schedule.thread.external.*, 1, 5)
  schedule-internal: aliasByNode(lachesis.*.schedule.thread.internal.*, 1, 5)
  scheduler-cpu: aliasByNode(lachesis.*.utilization.cpu.percent, 0, 1)
  graphite-cpu: aliasByNode(graphite.*.utilization.cpu.percent, 0, 1)
  scheduler-memory: aliasByNode(lachesis.*.utilization.memory.mb, 0, 1)
