executor_script: 'scripts/flink_distributed_do_run.sh'

dimensions:
  schema: variant.rate.parallelism
  rate:
    - 12000
    - 14000
    - 16000
    - 18000
    - 20000
    - 22000
    - 24000
  parallelism:
    - 4
queries:
  - name: FlinkLinearRoadKafkaDistributed
    reference: LinearRoad.LinearRoad

variants:
  - name: OS
    spe_command: "{flink_cmd} {class_name} {query_jar}  --time {duration_seconds} --statisticsFolder {statistics_folder} --kafkaHost {kafka_host}:9092 --conf {query_config_file}_p{parallelism}.json --rate {rate} {extra_args}"
    kafka_start_command: "ssh {kafka_host} 'BASEDIRHERE/scheduling-queries/kafka-source/start-source.sh --partitions {parallelism} {args} --configFile {query_config_file}_p{parallelism}.json --graphiteHost {statistics_host}  &>> {kafka_command_log} &'"
    kafka_stop_command: "ssh {kafka_host} 'pkill -f start-source.sh &>> {kafka_command_log} &'"
    args: ''
  - name: LACHESIS
    args: ''
    kafka_start_command: "ssh {kafka_host} 'BASEDIRHERE/scheduling-queries/kafka-source/start-source.sh --partitions {parallelism} {args} --configFile {query_config_file}_p{parallelism}.json --graphiteHost {statistics_host}  &>> {kafka_command_log} &'"
    kafka_stop_command: "ssh {kafka_host} 'pkill -f start-source.sh &>> {kafka_command_log} &'"
    spe_command: "{flink_cmd} {class_name} {query_jar} --time {duration_seconds} --statisticsFolder {statistics_folder} --kafkaHost {kafka_host}:9092 --conf {query_config_file}_p{parallelism}.json --rate {rate} {extra_args}"
    scheduler_command: >
      sudo java -Dname=Lachesis -cp BASEDIRHERE/scheduling-queries/lachesis/lachesis-0.1.jar
      io.palyvos.scheduler.integration.FlinkIntegration --minPriority 19
      --maxPriority -20  --cgroupPolicy one --statisticsFolder {statistics_folder} --statisticsHost {statistics_host} --logarithmic --period 1 --distributed {job_manager}
      --worker TaskManagerRunner --policy task-input-output-queue    


job_manager: "10.0.0.2"

flink_cmd: "BASEDIRHERE/distributed-flink-1.11.2/bin/flink run --class"
query_jar: "BASEDIRHERE/scheduling-queries/flink_queries/LinearRoad/target/LinearRoad-1.0.jar"
query_config_file: "BASEDIRHERE/scheduling-queries/flink_queries/LinearRoad/Configurations/seqs_kafka"

utilization_command: "BASEDIRHERE/scheduling-queries/scripts/utilization-flink.sh {statistics_host}"
ssh_cli: ssh -o PasswordAuthentication=no -o KbdInteractiveAuthentication=no -o ChallengeResponseAuthentication=no
kafka_command_log: BASEDIRHERE/scheduling-queries/kafka-source/command.log

csv_queries:
  throughput: aliasByNode(*.taskmanager.*.*.Source:-source.*.numRecordsOutPerSecond.m1_rate, 4, 5)
  sink-throughput: aliasByNode(*.taskmanager.*.*.Sink:-sink.*.numRecordsInPerSecond.m1_rate, 4, 5)
  latency: aliasByNode(*.taskmanager.*.*.*.*.latency, 4, 5)
  end-latency: aliasByNode(*.taskmanager.*.*.*.*.latency-ext, 4, 5)
  external-rate: aliasByNode(kafka.*.external-rate.value, 0, 1)
  external-queue: aliasByNode(*.taskmanager.*.*.*.*.external-queue-size, 4, 5)
  cpu: aliasByNode(flink.*.utilization.cpu.percent, 0, 1)
  memory: aliasByNode(flink.*.utilization.memory.mb, 0, 1)
  schedule-external: aliasByNode(lachesis.*.schedule.thread.external.*, 1, 5)
  schedule-internal: aliasByNode(lachesis.*.schedule.thread.internal.*, 1, 5)
  scheduler-cpu: aliasByNode(lachesis.*.utilization.cpu.percent, 0, 1)
  graphite-cpu: aliasByNode(graphite.*.utilization.cpu.percent, 0, 1)
  scheduler-memory: aliasByNode(lachesis.*.utilization.memory.mb, 0, 1)
